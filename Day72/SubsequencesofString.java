// Given a string, we have to find out all its subsequences of it. A String is a subsequence of a given String, that is generated by deleting some character of a given string without changing its order.

// Examples: 

// Input : abc
// Output : a, b, c, ab, bc, ac, abc

// Input : aaa
// Output : a, a, a, aa, aa, aa, aaa

package Day72;

import java.util.* ;
import java.io.*; 
import java.util.ArrayList;

class Solution {
    public static ArrayList<String> subsequences(String str) {
        String curr = "";  // Current subsequence being formed
        ArrayList<String> ans = powerSet(str, 0, curr);  // Call the powerSet function
        return ans;  // Return the final list of subsequences
    }

    private static ArrayList<String> powerSet(String str, int i, String curr) {
        ArrayList<String> res = new ArrayList<String>();  // Resultant list of subsequences
        if (i == str.length()) {  // Base case: reached the end of the string
            if (!curr.equals("")) {  // Exclude empty string
                res.add(curr);  // Add the current subsequence to the result
            }
            return res;  // Return the result
        }
        // Recursive calls to generate subsequences
        res.addAll(powerSet(str, i + 1, curr + str.charAt(i)));  // Include the current character
        res.addAll(powerSet(str, i + 1, curr));  // Exclude the current character
        return res;  // Return the result
    }
}
